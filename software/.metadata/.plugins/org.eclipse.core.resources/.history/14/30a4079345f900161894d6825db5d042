/*************************************************************************
* Copyright (c) 2004 Altera Corporation, San Jose, California, USA.      *
* All rights reserved. All use of this software and documentation is     *
* subject to the License Agreement located at the end of this file below.*
**************************************************************************
* Description:                                                           *
* The following is a simple hello world program running MicroC/OS-II.The * 
* purpose of the design is to be a very simple application that just     *
* demonstrates MicroC/OS-II running on NIOS II.The design doesn't account*
* for issues such as checking system call return codes. etc.             *
*                                                                        *
* Requirements:                                                          *
*   -Supported Example Hardware Platforms                                *
*     Standard                                                           *
*     Full Featured                                                      *
*     Low Cost                                                           *
*   -Supported Development Boards                                        *
*     Nios II Development Board, Stratix II Edition                      *
*     Nios Development Board, Stratix Professional Edition               *
*     Nios Development Board, Stratix Edition                            *
*     Nios Development Board, Cyclone Edition                            *
*   -System Library Settings                                             *
*     RTOS Type - MicroC/OS-II                                           *
*     Periodic System Timer                                              *
*   -Know Issues                                                         *
*     If this design is run on the ISS, terminal output will take several*
*     minutes per iteration.                                             *
**************************************************************************/


#include <stdio.h>
#include "includes.h"

/* Definition of Task Stacks */
#define   TASK_STACKSIZE       2048
OS_STK    task1_stk[TASK_STACKSIZE];
OS_STK    task2_stk[TASK_STACKSIZE];
OS_STK	  task3_stk[TASK_STACKSIZE];
OS_STK	  task4_stk[TASK_STACKSIZE];

#define WAIT_FOREVER 		0
#define QUEUE_SIZE 1

OS_EVENT *servo1Queue;
void *queue1Space[QUEUE_SIZE];
OS_EVENT *servo2Queue;
void *queue2Space[QUEUE_SIZE];
INT8U err;

/* Definition of Task Priorities */

#define TASK1_PRIORITY      1
#define TASK2_PRIORITY      2
#define TASK3_PRIORITY		3
#define TASK4_PRIORITY		4

/* Max rotation of our hardware is 60 degrees in either direction */
#define MAX_ROTATION 60
#define MIN_ROTATION -60

/* Prints "Hello World" and sleeps for three seconds */
void task1(void* pdata)
{
	 int *button3 = (int *) KEY_3_BASE;
	 int button3Value;

	 int *button2 = (int *) KEY_2_BASE;
	 int button2Value;

  while (1)
  { 
	  button3Value = *button3;
	  button2Value = *button2;

	  if(button3Value == 0){
		  OSQPost(servo1Queue, (int *) -1);
	  }
	  else if(button2Value == 0){
		  OSQPost(servo1Queue, (int *) 1);
	  }
	  OSTimeDlyHMSM(0, 0, 0, 20);
  }
}
/* Prints "Hello World" and sleeps for three seconds */
void task2(void* pdata)
{
	  int *servoAddr = (int *) SERVO_0_BASE;
	  int angleDifference;
	  int currAngle = 0;

  while (1){
	angleDifference = (int) OSQPend(servo1Queue, WAIT_FOREVER, &err);
	currAngle = currAngle + angleDifference;
	if(currAngle > MAX_ROTATION)
		currAngle = MAX_ROTATION;
	else if(currAngle < MIN_ROTATION)
		currAngle = MIN_ROTATION;

	*servoAddr = currAngle;
  }
}

void task3(void* pdata){
	 int *button0 = (int *) KEY_0_BASE;
		 int button0Value;

		 int *button1 = (int *) KEY_1_BASE;
		 int button1Value;

	  while (1)
	  {
		  button0Value = *button0;
		  button1Value = *button1;

		  if(button0Value == 0){
			  OSQPost(servo2Queue, (int *) 1);
		  }
		  else if(button1Value == 0){
			  OSQPost(servo2Queue, (int *) -1);
		  }
		  OSTimeDlyHMSM(0, 0, 0, 20);
	  }
}

/* Prints "Hello World" and sleeps for three seconds */
void task4(void* pdata)
{
	  int *servoAddr = (int *) SERVO_1_BASE;
	  int angleDifference;
	  int currAngle = 0;

  while (1){
	angleDifference = (int) OSQPend(servo2Queue, WAIT_FOREVER, &err);
	currAngle = currAngle + angleDifference;
	if(currAngle > MAX_ROTATION)
		currAngle = MAX_ROTATION;
	else if(currAngle < MIN_ROTATION)
		currAngle = MIN_ROTATION;
	*servoAddr = currAngle;
  }
}

/* The main function creates two task and starts multi-tasking */
int main(void)
{
  printf("Reset!\n");

  servo1Queue = OSQCreate(&queue1Space[0], QUEUE_SIZE);
  servo2Queue = OSQCreate(&queue2Space[0], QUEUE_SIZE);

  OSQPost(servo1Queue, (int *) 0);
  OSQPost(servo2Queue, (int *) 0);

  OSTaskCreateExt(task1,
                  NULL,
                  (void *)&task1_stk[TASK_STACKSIZE-1],
                  TASK1_PRIORITY,
                  TASK1_PRIORITY,
                  task1_stk,
                  TASK_STACKSIZE,
                  NULL,
                  0);
              
               
  OSTaskCreateExt(task2,
                  NULL,
                  (void *)&task2_stk[TASK_STACKSIZE-1],
                  TASK2_PRIORITY,
                  TASK2_PRIORITY,
                  task2_stk,
                  TASK_STACKSIZE,
                  NULL,
                  0);
  OSTaskCreateExt(task3,
                    NULL,
                    (void *)&task3_stk[TASK_STACKSIZE-1],
                    TASK3_PRIORITY,
                    TASK3_PRIORITY,
                    task3_stk,
                    TASK_STACKSIZE,
                    NULL,
                    0);

  OSTaskCreateExt(task4,
                     NULL,
                     (void *)&task4_stk[TASK_STACKSIZE-1],
                     TASK4_PRIORITY,
                     TASK4_PRIORITY,
                     task4_stk,
                     TASK_STACKSIZE,
                     NULL,
                     0);

  OSStart();
  return 0;
}

/******************************************************************************
*                                                                             *
* License Agreement                                                           *
*                                                                             *
* Copyright (c) 2004 Altera Corporation, San Jose, California, USA.           *
* All rights reserved.                                                        *
*                                                                             *
* Permission is hereby granted, free of charge, to any person obtaining a     *
* copy of this software and associated documentation files (the "Software"),  *
* to deal in the Software without restriction, including without limitation   *
* the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
* and/or sell copies of the Software, and to permit persons to whom the       *
* Software is furnished to do so, subject to the following conditions:        *
*                                                                             *
* The above copyright notice and this permission notice shall be included in  *
* all copies or substantial portions of the Software.                         *
*                                                                             *
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  *
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    *
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
* DEALINGS IN THE SOFTWARE.                                                   *
*                                                                             *
* This agreement shall be governed in all respects by the laws of the State   *
* of California and by the laws of the United States of America.              *
* Altera does not recommend, suggest or require that this reference design    *
* file be used in conjunction or combination with any other product.          *
******************************************************************************/
